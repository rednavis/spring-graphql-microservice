plugins {
    id 'java'
    id 'org.springframework.boot' version '2.2.4.RELEASE' apply false
    id 'com.google.cloud.tools.jib' version '2.0.0' apply false
//    id 'com.apollographql.apollo' version '1.3.0' apply false
}

ext {
    springCloudVersion = 'Hoxton.SR1'
    springBootVersion = '2.2.4.RELEASE'
    javaxServletApiVersion = '4.0.1'
//    vertxVersion = '3.8.5'
    swaggerVersion = '2.9.2'
    graphqlKickstartVersion = '6.0.1'
    lombokVersion = '1.18.10'
    mapstructVersion = '1.3.1.Final'
    mockneatVersion = '0.3.8'
//    graphqlJavaToolsVersion = '5.2.4'
    jupiterVersion = '5.6.0'
//    graphqlJavaVersion = '14.0'
}

allprojects {
//    ./gradlew clean htmlDependencyReport
    apply plugin: 'project-report'
}

// assumed that all subprojects are java-based modules
subprojects {
    repositories {
        jcenter()
        mavenCentral()
    }

    // needed because of multi-module configuration
    apply plugin: 'jacoco'
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    apply from: "${rootDir}/gradle/java.gradle"
    apply from: "${rootDir}/gradle/checkstyle.gradle"

    dependencyManagement {
        dependencies {
            //Server
            imports {
                mavenBom "org.springframework.cloud:spring-cloud-starter-parent:${springCloudVersion}"
            }

            dependency "javax.servlet:javax.servlet-api:${javaxServletApiVersion}"
//            dependency("io.vertx:vertx-web-graphql:${vertxVersion}")
//            dependency("com.graphql-java:graphql-java:${graphqlJavaVersion}")
//            dependency("com.graphql-java:graphql-java-tools:${graphqlJavaToolsVersion}")

            dependency "io.springfox:springfox-swagger-ui:${swaggerVersion}"
            dependency "io.springfox:springfox-swagger2:${swaggerVersion}"

            dependency "com.graphql-java-kickstart:graphql-spring-boot-starter:${graphqlKickstartVersion}"
            dependency "com.graphql-java-kickstart:graphiql-spring-boot-starter:${graphqlKickstartVersion}"

            dependency "org.projectlombok:lombok:${lombokVersion}"
            dependency "org.mapstruct:mapstruct:${mapstructVersion}"
            dependency "org.mapstruct:mapstruct-processor:${mapstructVersion}"

            dependency "net.andreinc.mockneat:mockneat:${mockneatVersion}"

            //Test
            dependency("org.junit.jupiter:junit-jupiter:${jupiterVersion}")
        }
    }

    dependencies {
        compile 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation 'org.junit.jupiter:junit-jupiter'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'junit', module: 'junit'
        }
    }

    test {
        useJUnitPlatform()
        testLogging {
            events 'passed', 'skipped', 'failed'
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled true
            html.enabled false
        }
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.enabled false
        csv.enabled false
    }
}

// https://github.com/codecov/example-gradle#-do-you-support-multi-module-projects
codeCoverageReport.dependsOn {
    subprojects*.test
}

wrapper {
    gradleVersion = "6.1.1"
}